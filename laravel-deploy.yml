---
- hosts: all
  become: true
  handlers:
    - name: restart apache2
      service: name=apache2 state=restarted
      ignore_errors: true
    - name: restart fpm
      service: name=php8.1-fpm state=restarted
    - name: restart nginx
      service: name=nginx state=restarted
  tasks:
    - name: Make sure the remote app root exists and has the right permissions
      file:
        path: "{{ remote_www_root }}/{{ app_root_dir }}"
        state: directory
        mode: '0755'
        owner: "{{ remote_user }}"
        group: "{{ remote_user }}"

    - name: "Install Rsync on local device"
      apt: >
        pkg={{ item }}
        state=latest
        update_cache=yes
        cache_valid_time=3600
      loop: ['rsync']

    - name: alternate rsync on the ansible controller
      connection: local
      package:
        name: rsync
        state: present

    - name: Rsync application files to the remote server
      synchronize:
        src: "application/{{ app_root_dir }}"
        dest: "{{ remote_www_root }}"
        rsync_opts:
          - "--no-motd"
          - "--exclude=.git,vendor,tests,storage/logs/*,storage/framework/sessions/*,storage/framework/cache/*"

    - name: Set up additional directory permissions for www-data user on storage folder
      acl:
        path: "{{ remote_www_root }}/{{ app_root_dir }}/storage/"
        entry: group:www-data:rwX
        recursive: yes
        state: present

    - name: Set up additional directory permissions for www-data user on bootstrap/cache folder
      acl:
        path: "{{ remote_www_root }}/{{ app_root_dir }}/bootstrap/cache/"
        entry: group:www-data:rwX
        recursive: yes
        state: present

    - name: Set up .env file
      template:
        src: laravel-env.j2
        dest: "{{ remote_www_root }}/{{ app_root_dir }}/.env"

    # - name: clear existing cache
    #   command: "/usr/bin/php {{ remote_www_root }}/{{ app_root_dir }}/artisan cache:clear"
    #   tags: [ 'laravel', 'artisan:key' ]

    - name: Install Dependencies with Composer
      become: false
      composer:
        command: install
        working_dir: "{{ remote_www_root }}/{{ app_root_dir }}"
      tags: [ 'composer:install' ]

    - name: Ensure faker is installed
      become: false
      composer:
        command: require
        arguments: fakerphp/faker
        working_dir: "{{ remote_www_root }}/{{ app_root_dir }}"
      tags: [ 'composer:add_faker' ]
    


    - name: Generate app key
      command: "/usr/bin/php {{ remote_www_root }}/{{ app_root_dir }}/artisan key:generate"
      tags: [ 'laravel', 'artisan:key' ]

    - name: Set up app storage link
      command: "/usr/bin/php {{ remote_www_root }}/{{ app_root_dir }}/artisan storage:link"
      tags: [ 'laravel', 'artisan:storage' ]

    - name: Cache config
      command: "/usr/bin/php {{ remote_www_root }}/{{ app_root_dir }}/artisan config:cache"
      tags: [ 'laravel', 'artisan:config' ]
      notify:
        # - restart apache2
        - restart fpm

    - name: reset migrate
      command: "/usr/bin/php {{ remote_www_root }}/{{ app_root_dir }}/artisan migrate:reset"
      tags: [ 'laravel', 'artisan:migrate' ]

    - name: Run Migrations + Seeders
      command: "/usr/bin/php {{ remote_www_root }}/{{ app_root_dir }}/artisan migrate --seed"
      # command: "/usr/bin/php {{ remote_www_root }}/{{ app_root_dir }}/artisan migrate:refresh --seed"
      tags: [ 'laravel', 'artisan:migrate:refresh' ]
      notify:
        # - restart apache2
        - restart nginx