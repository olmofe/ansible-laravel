---
- name: Install required packages
  apt:
    name:
      - wget
      - python3-psycopg2
      - acl
    state: latest

- name: Set up Postgres 14 repo
  shell: |
    echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list
    wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
  args:
    warn: no

- name: Install postgresql
  apt:
    name: postgresql-14
    update_cache: yes
  notify:
    - Enable Postgresql

# update the listen address so we can access the 
# service from a remote machine and then change identification to trust

- name: Ensure PostgreSQL is listening on *
  lineinfile:
    dest: /etc/postgresql/14/main/postgresql.conf
    regexp: '^listen_addresses\s*='
    line: "listen_addresses='*'"
    state: present
  notify: Restart Postgresql

- name: Add new configuration to "pg_hba.conf"
  blockinfile:
    dest: /etc/postgresql/14/main/pg_hba.conf
    block: |
      host    all             all             0.0.0.0/0                md5
      host    all             all             ::/0                     md5
  notify: Restart Postgresql

- name: Change peer identification to trust
  shell: /bin/sed -i '/^local/s/peer/trust/' /etc/postgresql/14/main/pg_hba.conf
  args:
    warn: no
  notify: Restart Postgresql

- name: Create a Superuser PostgreSQL database user
  become: true
  become_user: postgres
  postgresql_user:
    name: '{{ mysql_app_user }}'
    password: '{{ mysql_app_pass }}'
    role_attr_flags: CREATEDB,SUPERUSER,CREATEROLE
    encrypted: no
    state: present

- name: Create the database specified in group_var
  # remote_user: root
  become: true
  become_user: postgres
  postgresql_db: 
    name={{ mysql_app_db }}
    state=present
    # template='template0'
    # login_user=postgres





# - name: Install dependencies for PostgreSQL 
#   apt: name={{ item }} update_cache=true state=latest
#   loop: ['bash', 'openssl', 'libssl-dev', 'libssl-doc', 'acl', 'wget']
  # with_items:
  #   - bash
  #   - openssl
  #   - libssl-dev
  #   - libssl-doc

# - name: Install PostgreSQL 
#   apt: name={{ item }} update_cache=true state=present
#   loop: ['postgresql', 'postgresql-contrib', 'libpq-dev','python3-psycopg2']
  # with_items:
  #   - postgresql
  #   - postgresql-contrib
  #   - libpq-dev
  #   - python3-psycopg2

# - name: Ensure the PostgreSQL service is running
#   service: name=postgresql state=started enabled=y

# - name: Create the database specified in group_var
#   remote_user: root
#   become: true
#   become_user: postgres
#   postgresql_db: 
#     name={{ mysql_app_db }}
#     template='template0'
#     state=present
#     # login_user=postgres

# - name: Ensure user has access to the new database
#   remote_user: root
#   become: true
#   become_user: postgres
#   postgresql_user: db={{ mysql_app_db }}
#     name={{ mysql_app_user }}
#     password={{ mysql_app_pass }}
#     priv="{{ mysql_app_db }}.*:ALL"
#     state=present
         
# - name: Ensure user does not have unnecessary permissions
#   remote_user: root
#   become: true
#   become_user: postgres
#   postgresql_user: name={{ db_user }}
#     role_attr_flags=NOSUPERUSER,NOCREATEDB
#     state=preset