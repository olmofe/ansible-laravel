# Redirect all http to https.
server {
    listen {{ http_port }};
	    listen [::]:{{ http_port }};
    server_name {{ http_host }};
    return 308 https://$host$request_uri;
}

server {
    listen {{ https_port }} http2 ssl;
        listen [::]:{{ https_port }} http2 ssl;
    server_name {{ http_host }};

    ## redirect www to nowww
    ## if ($host = {{ www_host }} ) {
    ##     rewrite  ^/(.*)$  {{ https_host }}  permanent;
    ## }

    # Recommended TLS settings from: https://wiki.mozilla.org/Security/Server_Side_TLS
    ssl on;
    ssl_session_cache    shared:SSL:1m;
    ssl_session_timeout  10m;

    ssl_certificate         {{ letsencrypt_certs_dir }}/{{ domain_name }}.crt;
    ssl_certificate_key     {{ letsencrypt_keys_dir }}/{{ domain_name }}.key;
    ssl_trusted_certificate {{ letsencrypt_certs_dir }}/{{ domain_name }}.crt;



    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    # ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256;
    ssl_ciphers "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";
    ssl_prefer_server_ciphers on;
    proxy_ssl_session_reuse on;

    # access_log  /var/log/nginx/ssl_error.log main;
    # error_log   logs/cyberciti.biz/ssl_error.log;

    ssl_stapling on; 
    ssl_stapling_verify on;

    root {{ document_root }};

    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";

    index index.html index.htm index.php;

    charset utf-8;

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    error_page 404 /index.php;

    location ~ \.php$ {
        fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        include fastcgi_params;
    }

    location ~ /\.(?!well-known).* {
        allow all;
        try_files $uri =404;
        break;
    }

    location ~ /\.well-known/acme-challenge/ {
        allow all;
        try_files $uri =404;
        break;
    }
}